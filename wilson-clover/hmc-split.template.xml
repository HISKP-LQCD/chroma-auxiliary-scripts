<?xml version="1.0"?>

{# Jinja 2 (http://jinja.pocoo.org/) macros and variables. [[[ -#}

{% set clovCoeff = '1.0' -%}
{% set mass_light = '-0.1265' -%}
{% set prec_light = ['-0.1265', '-0.06873701', '0.5088929'] %}
{% set mass_strange = '-0.065' -%}
{% set residual_fine = '1e-9' -%}
{% set residual_coarse = '1e-6' -%}
{% set beta = (3.3 * 5.0/3.0) -%}
{% set l_xyz = 32 -%}
{% set l_t = 96 -%}

{% set action_pfe_norm = '0.155599823000314' -%}
{% set action_pfe_res = ['0.000520383284200624', '0.00102660572124056', '0.00181178793402857', '0.00321671030885498', '0.00577691086696587', '0.0104481579630266', '0.0189694277532285', '0.0345269234349506', '0.0630140232665876', '0.11554658170993', '0.21397301598633', '0.404952046467655', '0.804682609571783', '1.78771947718812', '5.1998544047142', '33.2821966055558'] -%}
{% set action_pfe_pole = ['6.64546366309794e-05', '0.000487449195727835', '0.00157062032741528', '0.00404382974795785', '0.00956902321293472', '0.0218606410513497', '0.0491901693924068', '0.109989034422501', '0.245460798566869', '0.548409030799076', '1.23135074841675', '2.79887228398744', '6.54558220539221', '16.3751974576828', '48.6939394291419', '253.394153115071'] -%}

{% set action_ipfe_norm = '6.42674252912215' -%}
{% set action_ipfe_res = ['-7.29056568824904e-06', '-3.08449297938295e-05', '-9.37710341257919e-05', '-0.000264162081194322', '-0.000727076084674794', '-0.00198489654440102', '-0.00540368881578466', '-0.0147100906225067', '-0.0401422330222872', '-0.110265593261843', '-0.307507964338403', '-0.887366185888659', '-2.76674191920454', '-10.330167418357', '-60.7697414728541', '-1657.35364282683'] -%}
{% set action_ipfe_pole = ['0.000130231892071377', '0.000677702407873996', '0.00201524287479766', '0.00504156833792643', '0.0117904629620992', '0.0267998375299895', '0.0601740637857775', '0.134441019473055', '0.300029909102002', '0.670865752397552', '1.50956231898618', '3.44862785528548', '8.16058094845985', '21.0108066373413', '67.6993629063764', '496.579346046959'] -%}

{% set force_pfe_norm = '0.0251773260361138' -%}
{% set force_pfe_res = ['0.00938447081670725', '0.0113556356385765', '0.015712245775329', '0.0233704650580646', '0.0359432248979228', '0.0560886542713153', '0.0881062194115078', '0.138988372319098', '0.220476881003024', '0.353893180549329', '0.584538806469361', '1.03738468679401', '2.21944414498477', '8.30625906187251'] -%}
{% set force_pfe_pole = ['5.25088256299576e-05', '0.000541070967033193', '0.00195024255755797', '0.00552632726119316', '0.0144330242366399', '0.0365557187762636', '0.091516089737837', '0.22828194229081', '0.570076879879339', '1.43344757660573', '3.67347605678986', '9.89378007837651', '30.5627463768969', '149.277768177754'] -%}

{% set force_ipfe_norm = '39.7182766178435' -%}
{% set force_ipfe_res = ['-2.23452961610184e-06', '-1.42439478447941e-05', '-6.35310799261578e-05', '-0.00025967481522029', '-0.00103247483279225', '-0.00406693386569719', '-0.0159884462327013', '-0.0630641527026447', '-0.251614273909366', '-1.03436369354839', '-4.58738368000716', '-24.7646340755357', '-232.527272190937', '-20404.0362904484'] -%}
{% set force_ipfe_pole = ['0.000221064398288062', '0.00107974589695072', '0.00333542889962994', '0.00898331702448543', '0.0230214209006101', '0.0578869292278345', '0.144558083170508', '0.360592329660653', '0.902731531609977', '2.28642309878658', '5.97141617575416', '16.9209721488805', '60.9901510349853', '628.465778925603'] -%}

{%- macro boundary_conditions() -%}
  <FermionBC>
    <FermBC>SIMPLE_FERMBC</FermBC>
    <boundary>1 1 1 -1</boundary>
  </FermionBC>
{%- endmacro -%}

{%- macro smear() -%}
<FermState>
  <Name>STOUT_FERM_STATE</Name>
  <rho>0.11</rho>
  <orthog_dir>-1</orthog_dir>
  <n_smear>6</n_smear>
  {{ boundary_conditions() }}
</FermState>
{%- endmacro -%}

{%- macro hasenbusch_det_ratio(mass_numerator, mass_denominator, monomial_id, residual) -%}
<!-- ({{ monomial_id }}) {{ mass_numerator }} / {{ mass_denominator }} [[[ -->
<elem>
  <Name>TWO_FLAVOR_EOPREC_CONSTDET_RATIO_CONV_CONV_FERM_MONOMIAL</Name>
  <Action>
    <InvertParam>
      <invType>QPHIX_CLOVER_INVERTER</invType>
      <SolverType>CG</SolverType>
      <MaxIter>10000</MaxIter>
      <RsdTarget>{{ residual }}</RsdTarget>
      <CloverParams>
        <Mass>{{ mass_numerator }}</Mass>
        <clovCoeff>{{ clovCoeff }}</clovCoeff>
      </CloverParams>
      <AntiPeriodicT>true</AntiPeriodicT>
    </InvertParam>
    <FermionAction>
      <FermAct>CLOVER</FermAct>
      <Mass>{{ mass_numerator }}</Mass>
      <clovCoeff>{{ clovCoeff }}</clovCoeff>
      {{ smear() }}
    </FermionAction>
  </Action>
  <PrecAction>
    <InvertParam>
      <invType>QPHIX_CLOVER_INVERTER</invType>
      <SolverType>CG</SolverType>
      <MaxIter>10000</MaxIter>
      <RsdTarget>{{ residual }}</RsdTarget>
      <CloverParams>
        <Mass>{{ mass_denominator }}</Mass>
        <clovCoeff>{{ clovCoeff }}</clovCoeff>
      </CloverParams>
      <AntiPeriodicT>true</AntiPeriodicT>
    </InvertParam>
    <FermionAction>
      <FermAct>CLOVER</FermAct>
      <Mass>{{ mass_denominator }}</Mass>
      <clovCoeff>{{ clovCoeff }}</clovCoeff>
      {{ smear() }}
    </FermionAction>
  </PrecAction>
  <ChronologicalPredictor>
    <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
  </ChronologicalPredictor>
  <NamedObject>
    <monomial_id>{{ monomial_id }}</monomial_id>
  </NamedObject>
</elem><!--]]]-->
{%- endmacro -%}

{%- macro hasenbusch_det(mass, monomial_id, residual) -%}
<!-- ({{ monomial_id }}) {{ mass }} [[[ -->
<elem>
  <Name>TWO_FLAVOR_EOPREC_CONSTDET_FERM_MONOMIAL</Name>
  <InvertParam>
    <invType>QPHIX_CLOVER_INVERTER</invType>
    <SolverType>CG</SolverType>
    <MaxIter>10000</MaxIter>
    <RsdTarget>{{ residual }}</RsdTarget>
    <CloverParams>
      <Mass>{{ mass }}</Mass>
      <clovCoeff>{{ clovCoeff }}</clovCoeff>
    </CloverParams>
    <AntiPeriodicT>true</AntiPeriodicT>
  </InvertParam>
  <FermionAction>
    <FermAct>CLOVER</FermAct>
    <Mass>{{ mass }}</Mass>
    <clovCoeff>{{ clovCoeff }}</clovCoeff>
    {{ smear() }}
  </FermionAction>
  <ChronologicalPredictor>
    <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
  </ChronologicalPredictor>
  <NamedObject>
    <monomial_id>{{ monomial_id }}</monomial_id>
  </NamedObject>
</elem><!--]]]-->
{%- endmacro -%}

{%- macro strange_det(mass, monomial_id, residual, begin, end) -%}
<!-- (strange_det) Wilson + clover: strange {{ mass }} [[[ -->
<elem>
  <Name>ONE_FLAVOR_EOPREC_CONSTDET_FERM_RAT_MONOMIAL</Name>
  <num_pf>1</num_pf>
  <Action>
    <FermionAction>
      <FermAct>CLOVER</FermAct>
      <Mass>{{ mass }}</Mass>
      <clovCoeff>{{ clovCoeff }}</clovCoeff>
      {{ smear() }}
    </FermionAction>
    <ActionApprox>
      <InvertParam>
        <invType>QPHIX_CLOVER_MULTI_SHIFT_INVERTER</invType>
        <SolverType>CG</SolverType>
        <MaxShifts>16</MaxShifts>
        <MaxIter>10000</MaxIter>
        <RsdTarget>{{ residual }}</RsdTarget>
        <CloverParams>
          <Mass>{{ mass }}</Mass>
          <clovCoeff>{{ clovCoeff }}</clovCoeff>
        </CloverParams>
        <AntiPeriodicT>true</AntiPeriodicT>
      </InvertParam>
      <RationalApprox>
              <ratApproxType>READ_COEFFS</ratApproxType>
              <PFECoeffs>
                <norm>{{ action_pfe_norm }}</norm>
                <res>{{ action_pfe_res|join(' ') }}</res>
                <pole>{{ action_pfe_pole|join(' ') }}</pole>
              </PFECoeffs>
              <IPFECoeffs>
                <norm>{{ action_ipfe_norm }}</norm>
                <res>{{ action_ipfe_res|join(' ') }}</res>
                <pole>{{ action_ipfe_pole|join(' ') }}</pole>
              </IPFECoeffs>
      </RationalApprox>
    </ActionApprox>
    <ForceApprox>
      <InvertParam>
        <invType>QPHIX_CLOVER_MULTI_SHIFT_INVERTER</invType>
        <SolverType>CG</SolverType>
        <MaxShifts>14</MaxShifts>
        <MaxIter>10000</MaxIter>
        <RsdTarget>{{ residual }}</RsdTarget>
        <CloverParams>
          <Mass>{{ mass }}</Mass>
          <clovCoeff>{{ clovCoeff }}</clovCoeff>
        </CloverParams>
        <AntiPeriodicT>true</AntiPeriodicT>
      </InvertParam>
      <RationalApprox>
              <ratApproxType>READ_COEFFS</ratApproxType>
              <PFECoeffs>
                <norm>{{ force_pfe_norm }}</norm>
                <res>{{ force_pfe_res[begin:end]|join(' ') }}</res>
                <pole>{{ force_pfe_pole[begin:end]|join(' ') }}</pole>
              </PFECoeffs>
              <IPFECoeffs>
                <norm>{{ force_ipfe_norm }}</norm>
                <res>{{ force_ipfe_res[begin:end]|join(' ') }}</res>
                <pole>{{ force_ipfe_pole[begin:end]|join(' ') }}</pole>
              </IPFECoeffs>
      </RationalApprox>
    </ForceApprox>
  </Action>
  <ChronologicalPredictor>
    <Name>LAST_SOLUTION_4D_PREDICTOR</Name>
  </ChronologicalPredictor>
  <NamedObject>
    <monomial_id>{{ monomial_id }}</monomial_id>
  </NamedObject>
</elem><!--]]]-->
{% endmacro %}

{# ]]] -#}

<Params>
  <MCControl><!--[[[-->

    <Cfg>
      <!-- Use the following block for a start from a fresh configuration -->
      <cfg_type>WEAK_FIELD</cfg_type>
      <cfg_file>DUMMY</cfg_file>

      <!-- Use the following block for a start from an existing configuration -->
      <!--
      <cfg_type>SZINQIO</cfg_type>
      <cfg_file>cfg/cfg.config-00000.lime</cfg_file>
      <parallel_io>false</parallel_io>
      -->
    </Cfg>

    <RNG>
      <Seed>
        <elem>11</elem>
        <elem>0 </elem>
        <elem>0 </elem>
        <elem>0 </elem>
      </Seed>
    </RNG>

    <StartUpdateNum>0</StartUpdateNum>
    <NWarmUpUpdates>100</NWarmUpUpdates>
    <NProductionUpdates>10000</NProductionUpdates>
    <NUpdatesThisRun>1</NUpdatesThisRun>

    <SaveInterval>1</SaveInterval>
    <SavePrefix>cfg/cfg</SavePrefix>
    <SaveVolfmt>SINGLEFILE</SaveVolfmt>
    <ParallelIO>false</ParallelIO>

    <ReproCheckP>false</ReproCheckP>
    <ReproCheckFrequency>1</ReproCheckFrequency>

    <ReverseCheckP>false</ReverseCheckP>
    <ReverseCheckFrequency>20</ReverseCheckFrequency>

    <MonitorForces>true</MonitorForces><InlineMeasurements>

    <InlineMeasurements>
      <elem>
        <Name>POLYAKOV_LOOP</Name>
        <Frequency>1</Frequency>
        <Param>
          <version>2</version>
        </Param>
        <NamedObject>
          <gauge_id>default_gauge_field</gauge_id>
        </NamedObject>
      </elem>
    </InlineMeasurements>
  </MCControl><!--]]]-->

  <HMCTrj>
    <Monomials>
      <!-- (gauge) Gauge [[[ -->
      <elem>
        <!-- Tree level Symanzik improved gauge, here it is called Lüscher-Weiß. The β is set to the value from the paper. -->
        <Name>GAUGE_MONOMIAL</Name>
        <GaugeAction>
          <Name>LW_TREE_GAUGEACT</Name>
          <beta>{{ beta }}</beta>
          <u0>1.0</u0>
          <GaugeBC>
            <Name>PERIODIC_GAUGEBC</Name>
          </GaugeBC>
        </GaugeAction>
        <NamedObject>
          <monomial_id>gauge</monomial_id>
        </NamedObject>
      </elem><!--]]]-->

      {{ hasenbusch_det_ratio(prec_light[0], prec_light[1], 'fine::light_det_ratio_1', residual_fine) }}
      {{ hasenbusch_det_ratio(prec_light[0], prec_light[1], 'coarse::light_det_ratio_1', residual_coarse) }}

      {{ hasenbusch_det_ratio(prec_light[1], prec_light[2], 'fine::light_det_ratio_2', residual_fine) }}
      {{ hasenbusch_det_ratio(prec_light[1], prec_light[2], 'coarse::light_det_ratio_2', residual_coarse) }}

      {{ hasenbusch_det(prec_light[2], 'fine::light_det', residual_fine) }}
      {{ hasenbusch_det(prec_light[2], 'coarse::light_det', residual_coarse) }}

      <!-- (light_log_det) log(det(T_ee)): up, down {{ mass_light }} [[[ -->
      <elem>
        <Name>N_FLAVOR_LOGDET_EVEN_EVEN_FERM_MONOMIAL</Name>
        <FermionAction>
          <FermAct>CLOVER</FermAct>
          <Mass>{{ mass_light }}</Mass>
          <clovCoeff>{{ clovCoeff }}</clovCoeff>
          {{ smear() }}
        </FermionAction>
        <num_flavors>2</num_flavors>
        <NamedObject>
          <monomial_id>light_log_det</monomial_id>
        </NamedObject>
      </elem><!--]]]-->

      {{ strange_det(mass_strange, 'fine::strange_det', residual_fine, 0, 14) }}
      {{ strange_det(mass_strange, 'coarse::strange_det_small', residual_coarse, 0, 4) }}
      {{ strange_det(mass_strange, 'coarse::strange_det_large', residual_coarse, 4, 14) }}

      <!-- (strange_log_det) log(det(T_ee)): strange {{ mass_strange }} [[[ -->
      <elem>
        <Name>N_FLAVOR_LOGDET_EVEN_EVEN_FERM_MONOMIAL</Name>
        <FermionAction>
          <FermAct>CLOVER</FermAct>
          <Mass>{{ mass_strange }}</Mass>
          <clovCoeff>{{ clovCoeff }}</clovCoeff>
          {{ smear() }}
        </FermionAction>
        <num_flavors>1</num_flavors>
        <NamedObject>
          <monomial_id>strange_log_det</monomial_id>
        </NamedObject>
      </elem><!--]]]-->

    </Monomials>

    <Hamiltonian><!--[[[-->
      <monomial_ids>
        <elem>gauge</elem>
        <elem>fine::light_det</elem>
        <elem>fine::light_det_ratio_1</elem>
        <elem>fine::light_det_ratio_2</elem>
        <elem>light_log_det</elem>
        <elem>fine::strange_det</elem>
        <elem>strange_log_det</elem>
      </monomial_ids>
    </Hamiltonian><!--]]]-->

    <MDIntegrator><!--[[[-->
      <copyList>
        <elem>
          <copyFrom>fine::light_det</copyFrom>
          <copyTo>coarse::light_det</copyTo>
        </elem>
        <elem>
          <copyFrom>fine::light_det_ratio_1</copyFrom>
          <copyTo>coarse::light_det_ratio_1</copyTo>
        </elem>
        <elem>
          <copyFrom>fine::light_det_ratio_2</copyFrom>
          <copyTo>coarse::light_det_ratio_2</copyTo>
        </elem>
        <elem>
          <copyFrom>fine::strange_det</copyFrom>
          <copyTo>coarse::strange_det_small</copyTo>
        </elem>
        <elem>
          <copyFrom>fine::strange_det</copyFrom>
          <copyTo>coarse::strange_det_large</copyTo>
        </elem>
      </copyList>
      <tau0>1.0</tau0>
      <Integrator>
        <Name>LCM_STS_MIN_NORM_2</Name>
        <n_steps>1</n_steps>
        <monomial_ids>
          <elem>coarse::light_det_ratio_2</elem>
        </monomial_ids>
        <SubIntegrator>
          <Name>LCM_STS_MIN_NORM_2</Name>
          <n_steps>1</n_steps>
          <monomial_ids>
            <elem>coarse::light_det_ratio_1</elem>
            <elem>coarse::strange_det_small</elem>
            <elem>coarse::strange_det_large</elem>
          </monomial_ids>
          <SubIntegrator>
            <Name>LCM_STS_MIN_NORM_2</Name>
            <n_steps>1</n_steps>
            <monomial_ids>
              <elem>light_log_det</elem>
              <elem>strange_log_det</elem>
              <elem>coarse::light_det</elem>
            </monomial_ids>
            <SubIntegrator>
              <Name>LCM_STS_MIN_NORM_2</Name>
              <n_steps>1</n_steps>
              <monomial_ids>
                <elem>gauge</elem>
              </monomial_ids>
            </SubIntegrator>
          </SubIntegrator>
        </SubIntegrator>
      </Integrator>
    </MDIntegrator><!--]]]-->

    <nrow>{{ l_xyz }} {{ l_xyz }} {{ l_xyz }} {{ l_t }}</nrow>

  </HMCTrj>
</Params>

<!-- vim: set foldcolumn=1 foldlevel=0 foldmarker=[[[,]]] foldmethod=marker shiftwidth=2 expandtab : -->
