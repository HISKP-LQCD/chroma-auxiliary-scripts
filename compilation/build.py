#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Copyright Â© 2018 Martin Ueding <dev@martin-ueding.de>

import os
import subprocess

import jinja2


arg_compiled = 'args.sh'
arg_template = 'args.m4'
arg_temporary = 'args-raw.sh'
script_compiled = 'bootstrap-chroma.sh'
script_template = 'bootstrap-chroma.sh.j2'


def make_argparse():
    if os.path.isfile(arg_compiled) and  \
       os.path.getmtime(arg_compiled) >= os.path.getmtime(arg_template):
        return

    output = subprocess.check_output(['argbash', arg_template, '--no-commented'])
    lines = output.decode().strip().split('\n')

    filtered = filter(lambda x: 'START OF CODE' in x[1],
                        enumerate(lines))
    start_line = list(filtered)[0][0]

    filtered = filter(lambda x: 'OTHER STUFF GENERATED BY Argbash' in x[1],
                        enumerate(lines))
    end_line = list(filtered)[0][0] - 1

    with open(arg_compiled, 'w') as f:
        f.write('\n'.join(lines[(start_line + 1):end_line]))


def main():
    make_argparse()

    # Setting up Jinja
    env = jinja2.Environment(loader=jinja2.FileSystemLoader("."))
    template = env.get_template(script_template)

    with open(arg_compiled) as f:
        arg_parsing = f.read()

    with open(script_compiled, "w") as f:
        f.write(template.render(arg_parsing=arg_parsing))


if __name__ == "__main__":
    main()
